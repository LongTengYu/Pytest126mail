{
  "uid" : "f724e2367327368b",
  "name" : "帐号或密码错误测试",
  "fullName" : "TestCase.Test_Login.Test_Login1#test_up_error",
  "historyId" : "ea83da6e9de95998ac762f38cb7f73f0",
  "time" : {
    "start" : 1609258968478,
    "stop" : 1609258973070,
    "duration" : 4592
  },
  "description" : "用例描述",
  "descriptionHtml" : "<p>用例描述</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '请先进行验证' == '帐号或密码错误'\n  - 帐号或密码错误\n  + 请先进行验证",
  "statusTrace" : "self = <Test_Login.Test_Login1 object at 0x000001F38448BB38>\n\n    @allure.title('帐号或密码错误测试')\n    @allure.severity('critical')\n    @pytest.mark.run(order=3)\n    def test_up_error(self):  # 帐号或密码错误测试模块\n    \n        self.type_iframe()\n        self.type_username(self.username)  # 调用用户名方法\n        self.type_password('1')  # 调用密码方法\n        self.submit()  # 调用登录按钮方法\n        sleep(2)\n        success = self.type_error()  # 获取错误提示信息\n        self.type_clear()  # 清除输入的信息\n        self.parentframe()  # 跳出登录框\n    \n        if success != '帐号或密码错误':  # 根据错误信息判断测试结果是否成功，若不成功则截图保存并返回错误提示\n            filename = '帐号或密码错误' + strftime(\"%Y-%m-%d %H_%M_%S\")  # 获取当前时间\n            dir = su_td().insert_img(self.driver, filename)  # 截图\n            with allure.step('用户名：Long 密码：123456'):\n                file = open(dir, mode='rb').read()\n                allure.attach(file, '添加图片', allure.attachment_type.JPG)  # 用于向测试报告中输入一些附加的信息，通常是一些测试数据，截图等\n>           assert success == '帐号或密码错误'\nE           AssertionError: assert '请先进行验证' == '帐号或密码错误'\nE             - 帐号或密码错误\nE             + 请先进行验证\n\nTestCase\\Test_Login.py:102: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1609258952320,
      "stop" : 1609258959642,
      "duration" : 7322
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "用例描述",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '请先进行验证' == '帐号或密码错误'\n  - 帐号或密码错误\n  + 请先进行验证",
    "statusTrace" : "self = <Test_Login.Test_Login1 object at 0x000001F38448BB38>\n\n    @allure.title('帐号或密码错误测试')\n    @allure.severity('critical')\n    @pytest.mark.run(order=3)\n    def test_up_error(self):  # 帐号或密码错误测试模块\n    \n        self.type_iframe()\n        self.type_username(self.username)  # 调用用户名方法\n        self.type_password('1')  # 调用密码方法\n        self.submit()  # 调用登录按钮方法\n        sleep(2)\n        success = self.type_error()  # 获取错误提示信息\n        self.type_clear()  # 清除输入的信息\n        self.parentframe()  # 跳出登录框\n    \n        if success != '帐号或密码错误':  # 根据错误信息判断测试结果是否成功，若不成功则截图保存并返回错误提示\n            filename = '帐号或密码错误' + strftime(\"%Y-%m-%d %H_%M_%S\")  # 获取当前时间\n            dir = su_td().insert_img(self.driver, filename)  # 截图\n            with allure.step('用户名：Long 密码：123456'):\n                file = open(dir, mode='rb').read()\n                allure.attach(file, '添加图片', allure.attachment_type.JPG)  # 用于向测试报告中输入一些附加的信息，通常是一些测试数据，截图等\n>           assert success == '帐号或密码错误'\nE           AssertionError: assert '请先进行验证' == '帐号或密码错误'\nE             - 帐号或密码错误\nE             + 请先进行验证\n\nTestCase\\Test_Login.py:102: AssertionError",
    "steps" : [ {
      "name" : "用户名：Long 密码：123456",
      "time" : {
        "start" : 1609258973067,
        "stop" : 1609258973068,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "19c7de4beffcb84f",
        "name" : "添加图片",
        "source" : "19c7de4beffcb84f.jpg",
        "type" : "image/jpg",
        "size" : 298288
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1609258993752,
      "stop" : 1609258994926,
      "duration" : 1174
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "登录套件"
  }, {
    "name" : "feature",
    "value" : "登录模块"
  }, {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "subSuite",
    "value" : "Test_Login1"
  }, {
    "name" : "host",
    "value" : "DESKTOP-VTQ1542"
  }, {
    "name" : "thread",
    "value" : "4296-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.Test_Login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://mail.126.com/",
    "url" : "https://mail.126.com/",
    "type" : "126邮箱地址"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=3)" ]
  },
  "source" : "f724e2367327368b.json",
  "parameterValues" : [ ]
}